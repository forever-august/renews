name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-release:
    name: Build packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install packaging tools
        run: |
          cargo install cargo-deb
          cargo install cargo-generate-rpm

      - name: Build release binary
        run: cargo build --release

      - name: Create DEB package
        run: cargo deb --no-build

      - name: Create RPM package
        run: cargo generate-rpm

      - name: Create tarball
        run: |
          mkdir -p renews-${{ github.ref_name }}/usr/bin
          mkdir -p renews-${{ github.ref_name }}/usr/share/man/man1
          mkdir -p renews-${{ github.ref_name }}/lib/systemd/system
          mkdir -p renews-${{ github.ref_name }}/etc/renews
          
          cp target/release/renews renews-${{ github.ref_name }}/usr/bin/
          cp dist/man/renews.1 renews-${{ github.ref_name }}/usr/share/man/man1/
          cp dist/systemd/renews.service renews-${{ github.ref_name }}/lib/systemd/system/
          cp dist/systemd/renews-nntp.socket renews-${{ github.ref_name }}/lib/systemd/system/
          cp dist/systemd/renews-nntps.socket renews-${{ github.ref_name }}/lib/systemd/system/
          cp dist/config.toml renews-${{ github.ref_name }}/etc/renews/config.toml
          cp LICENSE renews-${{ github.ref_name }}/
          cp README.md renews-${{ github.ref_name }}/
          cp dist/install.sh renews-${{ github.ref_name }}/
          cp dist/uninstall.sh renews-${{ github.ref_name }}/
          
          tar -czf renews-${{ github.ref_name }}-linux-x86_64.tar.gz renews-${{ github.ref_name }}/

      - name: Create Release
        uses: ncipollo/release-action@v1.18.0
        with:
          tag: ${{ github.ref }}
          name: ${{ github.ref_name }}
          draft: true
          allowUpdates: true
          updateOnlyUnreleased: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          artifacts: target/debian/*.deb,target/generate-rpm/*.rpm,*.tar.gz
